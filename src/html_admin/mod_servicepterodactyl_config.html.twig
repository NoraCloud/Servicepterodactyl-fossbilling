<form method="post" action="admin/servicepterodactyl/product_update" class="mainForm api-form save" data-api-msg="Settings updated">
    <input type="hidden" name="CSRFToken" value="{{ CSRFToken }}"/>
    <input type="hidden" name="id" value="{{ product.id }}"/>
    <div class="card-body">
        <h2>
            {{ 'Server Settings' | trans }}
        </h2>
    </div>
    <div class="card-body">
        <!--<div class="mb-3 row">
            <label class="form-label col-3">
            {{ 'Show Stock' | trans }}:
            </label>
            <div class="col">
            <div class="form-check form-check-inline">
            <input class="form-check-input" id="radioStockYes" type="radio" name="show_stock" value="1" {% if product.config.show_stock %} checked="checked" {% endif %}>
            <label class="form-check-label" for="radioStockYes">
            {{ 'Yes' | trans }}
            </label>
            </div>
            <div class="form-check form-check-inline">
            <input class="form-check-input" id="radioStockNo" type="radio" name="show_stock" value="0" {% if not product.config.show_stock %} checked="checked" {% endif %}>
            <label class="form-check-label" for="radioStockNo">
            {{ 'No' | trans }}
            </label>
            </div>
            </div>
            </div>
            <div class="mb-3 row">
            <label class="form-label col-3">
            {{ 'Associated panel' | trans }}:
            </label>
            {% set panels = admin.servicepterodactyl_panel_list() %}
            <div class="col">
            <select class="form-select" id='panel-selector' name="panel_id">
            <option disabled selected value="">{{ 'Select a panel' | trans }}</option>
            {% for panel in panels %}
                <option value="{{ panel.id }}" {% if product.config.panel_id == panel.id %} selected {% endif %}>{{ panel.name }}</option>
            {% endfor %}
            </select>
            </div>
            </div>-->
            <div class="mb-3 row">
                <label class="form-label col-3">
                    {{ 'Associated egg' | trans }}:
                </label>
                {% set eggs = admin.servicepterodactyl_egg_list() %}
                <div class="col">
                    <select required class="form-select" id='egg-selector' name="egg_conf">
                        <option disabled selected value="">{{ 'Select an egg' | trans }}</option>
                        {% for egg in eggs %}
                            <option value="{{ egg.panel_id }}|{{ egg.uuid }}" {% if product.config.egg_conf == egg.panel_id ~ '-' ~ egg.id %} selected {% endif %}>{{egg.panel_name}} - {{ egg.name }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
            <!--<div class="mb-3 row">
                <label class="form-label col-3">
                {{ 'Server filling method' | trans }}:
                </label>
                <div class="col">
                <div class="form-check form-check-inline">
                <input class="form-check-input" id="radioFillingYes" type="radio" name="filling" value="least" {% if product.config.filling == "least" %} checked="checked" {% endif %}>
                <label class="form-check-label" for="radioFillingYes">
                {{ 'Least filled Server' | trans }}
                </label>
                </div>
                <div class="form-check form-check-inline">
                <input class="form-check-input" id="radioFillingNo" type="radio" name="filling" value="full" {% if product.config.filling == "full"%} checked="checked" {% endif %}>
                <label class="form-check-label" for="radioFillingNo">
                {{ 'Fill up each Server until full' | trans }}
                </label>
                </div>
                </div>
                </div>-->
    </div>
    <div class="card-body">
        <h2>
            {{ 'Product Settings' | trans }}
        </h2>
        <div class="mb-3 row">
            <div class="col-4" id='select-cpu-limit'>
                <label class="form-label col-form-label">
                    {{ 'CPU Limit (%)' | trans }}
                </label>
                <input type="number" min=0 step=50 max=4000 class="form-control" placeholder="{{ '1 vCPU = 100% (0 = unlimited)' | trans}}" name="cpu" value="{{ product.config.cpu_limit }}" required>
            </div>

            <div class="col-4" id='select-memory-limit'>
                <label class="form-label col-form-label">
                    {{ 'Memory Limit (MiB)' | trans }}
                </label>
                <input type="number" min=0 class="form-control" placeholder="{{ '1024 MiB = 1G (0 = unlimited)' | trans}}" name="memory" value="{{ product.config.memory_limit }}" required>
            </div>

            <div class="col-4" id='select-disk-space'>
                <label class="form-label col-form-label">
                    {{ 'Disk space (MiB)' | trans }}
                </label>
                <input type="number" min=0 class="form-control" placeholder="{{ '1024 MiB = 1G (0 = unlimited)' | trans}}" name="disk" value="{{ product.config.disk_space }}" required>
            </div>
        </div>

        <div class="mb-3 row">
            <div class="col-4" id='select-db-limit'>
                <label class="form-label col-form-label">
                    {{ 'Databases Limit' | trans }}
                </label>
                <input type="number" min=0 max=100 class="form-control" value=0 name="databases" value="{{ product.config.db_limit }}" required>
            </div>

            <div class="col-4" id='select-allocation-limit'>
                <label class="form-label col-form-label">
                    {{ 'Additional allocations' | trans }}
                </label>
                <input type="number" min=0 max=100 class="form-control" value=0 name="allocations" value="{{ product.config.allocation_limit }}" required>
            </div>

            <div class="col-4" id='select-backup-limit'>
                <label class="form-label col-form-label">
                    {{ 'Allowed backups' | trans }}
                </label>
                <input type="number" min=0 max=100 class="form-control" value=0 name="backups" value="{{ product.config.backup_limit }}" required>
            </div>
        </div>
        <input type="submit" value="{{ 'Save'|trans }}" class="btn btn-primary w-100">

    </div>
</form>
{% block js %}
    <script>
        /*if (document.getElementById('radioVirtlxc').checked && !document.getElementById('radioVirtqemu').checked) {
            document.getElementById('select-lxc-template').hidden = false;
            document.getElementById('select-vm-config-template').hidden = true;
            document.getElementById('select-template-vm').hidden = true;
        } else if (!document.getElementById('radioVirtlxc').checked && document.getElementById('radioVirtqemu').checked) {
            document.getElementById('select-lxc-template').hidden = true;
            document.getElementById('select-vm-config-template').hidden = false;
            document.getElementById('select-template-vm').hidden = false;
        }
        document.getElementById('radioVirtlxc').addEventListener('click', function() {
            if (document.getElementById('radioVirtlxc').checked && !document.getElementById('radioVirtqemu').checked) {
                document.getElementById('select-lxc-template').hidden = false;
                document.getElementById('select-vm-config-template').hidden = true;
                document.getElementById('select-template-vm').hidden = true;
            } else if (!document.getElementById('radioVirtlxc').checked && document.getElementById('radioVirtqemu').checked) {
                document.getElementById('select-lxc-template').hidden = true;
                document.getElementById('select-vm-config-template').hidden = false;
                document.getElementById('select-template-vm').hidden = false;
            }
        })
        document.getElementById('radioVirtqemu').addEventListener('click', function() {
            if (document.getElementById('radioVirtlxc').checked && !document.getElementById('radioVirtqemu').checked) {
                document.getElementById('select-lxc-template').hidden = false;
                document.getElementById('select-vm-config-template').hidden = true;
                document.getElementById('select-template-vm').hidden = true;
            } else if (!document.getElementById('radioVirtlxc').checked && document.getElementById('radioVirtqemu').checked) {
                document.getElementById('select-lxc-template').hidden = true;
                document.getElementById('select-vm-config-template').hidden = false;
                document.getElementById('select-template-vm').hidden = false;
            }
        })

        var groupSelector = document.getElementById('group-selector');
        groupSelector.addEventListener('change', function() {
            $group = $(this).val();

            populateServers($group);
        });
        groupSelector.dispatchEvent(new Event('change'));

        function populateServers(group) {
            var serverSelector = document.getElementById('server-selector');
            $(serverSelector).html('');

            API.admin.post('servicepterodactyl/servers_in_group', {
                group: group
            }, function(response) {
                response.forEach(function(server) {
                    if (server.id == {
                        {
                            product.config.server
                        }
                    }) {
                        $(serverSelector).html($(serverSelector).html() + '<option value="' + server.id + '" selected>' + server.name + '</option>');
                    } else {
                        $(serverSelector).html($(serverSelector).html() + '<option value="' + server.id + '">' + server.name + '</option>');
                    }
                });
                serverSelector.dispatchEvent(new Event('change'));
            });

        }
        var serverSelector = document.getElementById('server-selector');
        serverSelector.addEventListener('change', function() {
            $server = $(this).val();

            populateTemplates($server);
        });

        serverSelector.dispatchEvent(new Event('change'));

        function populateTemplates(server) {
            var vmSelector = document.getElementById('vm-selector');
            $(vmSelector).html('');

            API.admin.post('servicepterodactyl/qemu_templates_on_server', {
                server_id: server
            }, function(response) {
                response.forEach(function(template) {
                    if (template.id == {
                        {
                            product.config.vm - templ
                        }
                    }) {
                        $(vmSelector).html($(vmSelector).html() + '<option value="' + template.id + '" selected>' + template.name + '</option>');
                    } else {
                        $(vmSelector).html($(vmSelector).html() + '<option value="' + template.id + '">' + template.name + '</option>');
                    }
                });
            }, function(error) {
                console.log('Error occurred while retrieving templates: '+ error);
            }, false, );
        }*/
    </script>
{% endblock %}

